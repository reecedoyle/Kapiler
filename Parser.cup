package Kapiler

import java_cup.runtime.*;

terminal TDEF, DEF, VOID, IN, IF, ELSE, FOREACH, WHILE, DO, RETURN, READ, PRINT, CHAR, BOOLEAN, INT, FLOAT, STRING, LIST, DICT, MAIN, LPAREN, RPAREN, LBRACE, RBRACE, LBRACK, RBRACK, LDICT, RDICT, SEMI, COMMA, DOT, EQ, EXCLAMATION, AND, PLUS, MINUS, MULT, DIV, POW, CONCAT, LT, LTEQ, NOTEQ, COLON, BOOLEAN_LITERAL, INTEGER_LITERAL, FLOAT_LITERAL, ID, STRING_LITERAL, CHARACTER_LITERAL;

non terminal program, main, decllist, exprlist, funcdef, typedef, vardef;

program		::= decllist main decllist	{: System.out.println("-------end of parsing-------"); :}
	;

main		::= VOID MAIN LBRACE exprlist RBRACE
	;

decllist	::= decllist decl
			| 
	;

decl		::= funcdef
			| vardef
			| typedef
	;

exprlist	::=
	;

funcdef		::= DEF type ID LPAREN paramlist RPAREN LBRACE exprlist RBRACE
	;

vardef		::= type ID varinit SEMI
	;

varinit		::= EQ varassign
			|
	;

varassign	::= value
			| dictassign
			| listassign
	;

/*---- DICTS & LISTS ----*/ // Provisionally complete

dictassign	::= LDICT dictdef RDICT SEMI
	;

dictdef		::= dictval dictvals
			|
	;

dictvals	::= COMMA dictval dictvals
			|
	;

dictval 	::= value COLON value
	;

listassign	::= LBRACK listdef RBRACK SEMI
	;

listdef		::= value listvals
			|
	;

listvals	::= COMMA value listvals
			|
	;

/*------------------------------------*/

typedef		::= TDEF ID COLON typefield typefields SEMI
	;

typefields	::= typefield typefields
			|
	;

typefield	::= ID COLON type

type		::= CHAR //list of different types for function return
			| BOOLEAN
			| INT
			| FLOAT
			| STRING
			| LIST
			| DICT
			| ID // to account for user-defined types
	;

value		::= CHARACTER_LITERAL
			| BOOLEAN_LITERAL
			| INTEGER_LITERAL
			| FLOAT_LITERAL
			| STRING_LITERAL
	;

paramlist	::= //parsing of parameters to a function
	;